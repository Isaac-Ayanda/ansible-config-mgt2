
pipeline {
  agent any

  environment {
      ANSIBLE_CONFIG="${WORKSPACE}/deploy/ansible.cfg"
    }
<<<<<<< HEAD

  parameters {
      string(name: 'inventory', defaultValue: 'dev',  description: 'This is the inventory file for the environment to deploy configuration')
    }

=======
>>>>>>> main
  stages {
    stage("Initial cleanup") {
       steps {
            dir("${WORKSPACE}") {
              deleteDir()
            }
          }
        }
    stage('Checkout SCM') {
       steps {
<<<<<<< HEAD
            git branch: 'feature/jenkinspipeline-stages', url: 'https://github.com/Isaac-Ayanda/ansible-config-mgt2.git'
=======
            git branch: 'main', url: 'https://github.com/Isaac-Ayanda/ansible-config-mgt2.git'
>>>>>>> main
         }
       }
    stage('Prepare Ansible For Execution') {
       steps {
             sh 'echo ${WORKSPACE}'
             sh 'sed -i "3 a roles_path=${WORKSPACE}/roles" ${WORKSPACE}/deploy/ansible.cfg'
         }
       }
    stage('Run Ansible playbook') {
       steps {
<<<<<<< HEAD
        ansiblePlaybook become: true, colorized: true, credentialsId: 'private-key', disableHostKeyChecking: true, installation: 'ansible', inventory: 'inventory/${inventory}', playbook: 'playbooks/site.yml'
=======
        ansiblePlaybook become: true, colorized: true, credentialsId: 'private-key', disableHostKeyChecking: true, installation: 'ansible', inventory: 'inventory/dev', playbook: 'playbooks/site.yml'
>>>>>>> main
         }
       }
    stage('Clean Workspace after build'){
       steps{
        cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, deleteDirs: true)
         }
       }
  }   
<<<<<<< HEAD
 }
=======
 }
>>>>>>> main
